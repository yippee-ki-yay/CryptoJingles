{"version":3,"file":"733.7706c55ce8833c88d2bf.bundle.js","mappings":"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","sources":["webpack:///./src/actions/marketplaceActions.js","webpack:///./src/components/Decorative/PlayIcon.jsx","webpack:///./src/components/Decorative/StopIcon.jsx","webpack:///./src/components/SampleBox/SampleBox2.jsx","webpack:///./src/actions/audioActions.js","webpack:///./src/components/SingleJingle/SingleJingle.jsx"],"sourcesContent":["import axios from 'axios';\nimport { API_URL } from '../util/config';\nimport {\n  SET_MARKETPLACE_CATEGORY, SET_MARKETPLACE_JINGLES, SET_MARKETPLACE_SORT, SET_MARKETPLACE_PAGE,\n  MARKETPLACE_LIKE_UNLIKE_JINGLE,\n} from '../constants/actionTypes';\nimport { likeUnlikeJingle } from './utils';\n\n/**\n * Gets all jingles for category and sort option fromm the server and then sets it in the state\n *\n * @return {Function}\n */\nexport const getMarketplaceJingles = () => async (dispatch, getState) => {\n  const { currentPage, category, sorting } = getState().marketplace;\n  const { hasMM, lockedMM, address } = getState().app;\n  let jingles = [];\n\n  try {\n    // TODO - export this to Api.js\n    const response = await axios(`${API_URL}/jingles/${category.value}/${currentPage}/filter/${sorting.value}`);\n\n    const jingleIds = response.data.map((_jingle) => _jingle.jingleId).toString();\n\n    if ((hasMM && !lockedMM) && jingleIds.length > 0) {\n      const likedJinglesResponse = await axios(`${API_URL}/jingles/check-liked/${address}/${jingleIds}`);\n      jingles = response.data.map((_jingle, index) => ({\n        ..._jingle, liked: likedJinglesResponse.data[index],\n      }));\n    }\n\n    if ((!hasMM || lockedMM) && jingleIds.length > 0) {\n      jingles = response.data.map((_jingle) => ({ ..._jingle, liked: false }));\n    }\n\n    if (jingleIds.length === 0) jingles = response.data;\n\n    // false for all jingles, true to get jingles on sale\n    const query = `${API_URL}/jingles/count/filter/${sorting.value}/sale/${(category.value === 'sale').toString()}`;\n    const num = await axios(query);\n\n    dispatch({ type: SET_MARKETPLACE_JINGLES, payload: { jingles, num: num.data } });\n  } catch (err) {\n    // console.error('Get marketplace jingles error:', err); // TODO Handle this in the future\n  }\n};\n\n/**\n * Changes the current selected category for the marketplace\n * and then get all jingles for that category\n *\n * @param {Object} payload { value, label }\n *\n * @return {Function}\n */\nexport const changeMarketplaceCategory = (payload) => (dispatch) => {\n  dispatch({ type: SET_MARKETPLACE_CATEGORY, payload });\n  dispatch(getMarketplaceJingles());\n};\n\n/**\n * Changes the current selected sorting option for the marketplace\n * and then get all jingles for that sorting option\n *\n * @param {Object} payload { value, label }\n *\n * @return {Function}\n */\nexport const changeMarketplaceSorting = (payload) => (dispatch) => {\n  dispatch({ type: SET_MARKETPLACE_SORT, payload });\n  dispatch(getMarketplaceJingles());\n};\n\n/**\n * Changes the current selected page and then get all jingles for that page\n *\n * @param {Number} pageNum\n *\n * @return {Function}\n */\nexport const onMarketplacePaginationChange = (pageNum) => (dispatch) => {\n  dispatch({ type: SET_MARKETPLACE_PAGE, payload: pageNum + 1 });\n  dispatch(getMarketplaceJingles());\n};\n\n/**\n * Updates jingle like count based on jingleId.\n *\n * @param {Number} jingleId\n * @param {Boolean} action - true = like, false = dislike\n *\n * @return {Function}\n */\nexport const likeUnLikeMarketplaceJingle = (jingleId, action) => async (dispatch, getState) => {\n  const state = getState();\n  const { address } = state.app;\n\n  try {\n    const likeData = await likeUnlikeJingle(jingleId, action, address);\n    if (!likeData) return;\n\n    const jingles = [...state.marketplace.jingles];\n    const jingleIndex = jingles.findIndex((_jingle) => _jingle.jingleId === jingleId);\n\n    jingles[jingleIndex] = { ...jingles[jingleIndex], ...likeData };\n    dispatch({ type: MARKETPLACE_LIKE_UNLIKE_JINGLE, payload: jingles });\n  } catch (err) {\n    // TODO Handle this in the future\n  }\n};\n","import React from 'react';\n\nconst PlayIcon = () => (\n  <svg viewBox=\"0 0 140 140\" className=\"play-icon\">\n    <circle cx=\"70\" cy=\"70\" r=\"65\" style={{ fill: '#fff', stroke: '#4b4b4b' }} />\n    <polygon id=\"shape\" points=\"50,40 100,70 100,70 50,100, 50,40\" style={{ fill: '#7d7d7d' }} />\n  </svg>\n);\n\nexport default PlayIcon;\n","import React from 'react';\n\nconst StopIcon = () => (\n  <svg viewBox=\"0 0 140 140\" >\n    <circle cx=\"70\" cy=\"70\" r=\"65\" style={{ fill: '#fff', stroke: '#ddd' }} />\n    <polygon id=\"shape\" points=\"45,45 95,45 95,95, 45,95 45,45\" style={{ fill: '#aaa' }} />\n  </svg>\n);\n\nexport default StopIcon;\n","import React, { Component } from 'react';\nimport Pizzicato from 'pizzicato';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PlayIcon from '../Decorative/PlayIcon';\nimport StopIcon from '../Decorative/StopIcon';\nimport LoadingIcon from '../Decorative/LoadingIcon';\nimport { playAudio } from '../../actions/audioActions';\nimport { getColorForRarity } from '../../actions/profileActions';\n\n// import './SampleBox.css';\n\nconst style = {\n  margin: '14px 27px 7px 26px',\n  width: '175px',\n  float: 'left',\n};\n\nclass SampleBox2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      start: false,\n      loading: false,\n      sound: null,\n    };\n\n    this.stopSound = this.stopSound.bind(this);\n    this.playSound = this.playSound.bind(this);\n    this.loadSample = this.loadSample.bind(this);\n  }\n\n  componentWillUnmount() { this.stopSound(); }\n\n  playSound = () => {\n    if (this.state.sound === null) {\n      this.loadSample();\n      return;\n    }\n\n    this.state.sound.play();\n    this.setState({ start: true });\n  };\n\n  stopSound = () => {\n    if (!this.state.sound) return;\n    this.state.sound.stop();\n    this.setState({ start: false });\n  };\n\n  loadSample() {\n    this.setState({ loading: true });\n\n    const sound = new Pizzicato.Sound(this.props.source, () => {\n      sound.on('stop', () => { this.setState({ start: false }); });\n\n      this.setState({ sound, start: false, loading: false });\n      this.playSound();\n    });\n  }\n\n  render() {\n    const { name, jingleType, rarity } = this.props;\n    const background = getColorForRarity(rarity);\n\n    return (\n      <div style={{ ...style }}>\n        <div className=\"sample-wrapper\">\n          <div className=\"top\" style={{ background }}>\n            { this.state.loading && <div><LoadingIcon /></div> }\n            {\n              !this.state.loading && !this.state.start &&\n              <div onClick={this.playSound}><PlayIcon /></div>\n            }\n            {\n              !this.state.loading && this.state.start &&\n              <div onClick={this.stopSound}><StopIcon /></div>\n            }\n          </div>\n\n          <div className=\"bottom\">\n            <div className=\"name-tag\">{ name }</div>\n\n            <div className=\"id-tag\">\n              <span>#{ jingleType } - </span>\n              <span style={{ color: background }}>\n                { rarity === 0 && 'Common' }\n                { rarity === 1 && 'Rare' }\n                { rarity === 2 && 'Legendary' }\n                { rarity === 3 && 'Mythical' }\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSampleBox2.propTypes = {\n  source: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  rarity: PropTypes.number.isRequired,\n  jingleType: PropTypes.number.isRequired,\n};\n\nexport default connect(null, { playAudio })(SampleBox2);\n","import { SET_SINGLE_AUDIO } from '../constants/actionTypes';\n\nexport const playAudio = (payload) => (dispatch) => {\n  dispatch({ type: SET_SINGLE_AUDIO, payload });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Sound, Group } from 'pizzicato';\nimport PropTypes from 'prop-types';\nimport JingleImage from '../JingleImage/JingleImage';\nimport LoadingIcon from '../Decorative/LoadingIcon';\nimport Heart from '../Decorative/Heart';\nimport { getJingleMetadata } from '../../constants/getMockData';\nimport { likeUnLikeMarketplaceJingle } from '../../actions/marketplaceActions';\nimport { likeUnLikeProfileJingle } from '../../actions/profileActions';\nimport { playWithDelay } from '../../util/soundHelper';\nimport { formatSalePrice } from '../../actions/utils';\n\nclass SingleJingle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      start: false,\n      loading: false,\n      sound: null,\n    };\n\n    this.stopSound = this.stopSound.bind(this);\n    this.playSound = this.playSound.bind(this);\n    this.loadJingle = this.loadJingle.bind(this);\n  }\n\n  componentWillUnmount() { this.stopSound(); }\n\n  playSound = () => {\n    if (this.state.sound === null) {\n      this.loadJingle();\n      return;\n    }\n\n    playWithDelay(this.state.sound, this.props.settings);\n    this.setState({ start: true });\n  };\n\n  stopSound = () => {\n    if (!this.state.sound) return;\n    this.state.sound.stop();\n    this.setState({ start: false });\n  };\n\n  likeJingle = (jingleId, action) => {\n    if (!this.props.canLike) return;\n    if (this.props.type === 'marketplace') this.props.likeUnLikeMarketplaceJingle(jingleId, action);\n    if (this.props.type === 'profile') this.props.likeUnLikeProfileJingle(jingleId, action);\n  };\n\n  loadJingle() {\n    let delays = this.props.settings.slice(5, 11);\n    delays = delays.map((d) => parseInt(d, 10));\n\n    const sampleSrcs = this.props.sampleTypes.map((sampleType, i) => new Promise((resolve) => {\n      const sound = new Sound(getJingleMetadata(sampleType).source, () => { resolve(sound); });\n      sound.volume = parseInt(this.props.settings[i], 10) / 100;\n    }));\n\n    this.setState({ loading: true });\n\n    Promise.all(sampleSrcs).then((sources) => {\n      const longestSound = sources.reduce((prev, current, i) => ((\n        (prev.getRawSourceNode().buffer.duration + delays[i]) >\n        (current.getRawSourceNode().buffer.duration) + delays[i]) ?\n        prev : current));\n\n      longestSound.on('stop', () => { this.setState({ start: false }); });\n\n      const sound = new Group(sources);\n\n      sound.on('stop', () => { this.setState({ start: false }); });\n\n      this.setState({ sound, start: false, loading: false });\n      this.playSound();\n    });\n  }\n\n  render() {\n    const {\n      jingleId, author, name, onSale, price, likeCount, liked, hasMM, lockedMM, type, canLike,\n    } = this.props;\n\n    return (\n      <div key={jingleId} className=\"single-song\">\n        <div className=\"jingle-image-actions\">\n          {\n            onSale && (\n              <div className=\"header-label\">\n                <span>On sale for:</span>\n                {formatSalePrice(price)}Ξ\n              </div>\n            )\n          }\n\n          <div className=\"jingle-image-container\">\n            <JingleImage width={200} height={200} id={jingleId} />\n          </div>\n\n          <div className=\"overlay\">\n            { this.state.loading && <LoadingIcon /> }\n            {\n              !this.state.start && !this.state.loading && (\n                <span onClick={this.playSound}>\n                  <i className=\"material-icons play\">play_circle_outline</i>\n                </span>\n              )\n            }\n            {\n              this.state.start && !this.state.loading &&\n              <span onClick={this.stopSound}><i className=\"material-icons stop\">cancel</i></span>\n            }\n            <Link to={`/jingle/${jingleId}`}>\n              <i className=\"material-icons open\">open_in_new</i>\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"jingle-footer\">\n          <div className=\"id-likes-wrapper\">\n            <span>#{ jingleId }</span>\n            {\n              type !== 'home' && (\n                <span>\n                  <span onClick={() => { this.likeJingle(jingleId, !liked); }}>\n                    <Heart active={liked} size=\"30\" canLike={hasMM && !lockedMM && canLike} />\n                  </span>\n                  <span>{ likeCount }</span>\n                </span>\n              )\n            }\n          </div>\n          <div className=\"jingle-footer-author\">{ author }</div>\n          <div className=\"jingle-footer-name\">{ name }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSingleJingle.propTypes = {\n  likeUnLikeMarketplaceJingle: PropTypes.func.isRequired,\n  likeUnLikeProfileJingle: PropTypes.func.isRequired,\n  hasMM: PropTypes.bool.isRequired,\n  lockedMM: PropTypes.bool.isRequired,\n  canLike: PropTypes.bool.isRequired,\n  settings: PropTypes.array.isRequired,\n  sampleTypes: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired,\n  jingleId: PropTypes.number.isRequired,\n  author: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onSale: PropTypes.bool.isRequired,\n  price: PropTypes.number.isRequired,\n  likeCount: PropTypes.number.isRequired,\n  liked: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  volumes: state.compose.volumes,\n  delays: state.compose.delays,\n  hasMM: state.app.hasMM,\n  lockedMM: state.app.lockedMM,\n  canLike: state.app.canLike,\n});\n\nconst mapDispatchToProps = { likeUnLikeMarketplaceJingle, likeUnLikeProfileJingle };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleJingle);\n"],"names":["getMarketplaceJingles","dispatch","getState","marketplace","currentPage","category","sorting","app","hasMM","lockedMM","address","jingles","axios","API_URL","value","response","jingleIds","data","map","_jingle","jingleId","toString","length","likedJinglesResponse","index","liked","query","num","type","SET_MARKETPLACE_JINGLES","payload","changeMarketplaceCategory","SET_MARKETPLACE_CATEGORY","changeMarketplaceSorting","SET_MARKETPLACE_SORT","onMarketplacePaginationChange","pageNum","SET_MARKETPLACE_PAGE","likeUnLikeMarketplaceJingle","action","state","likeUnlikeJingle","likeData","jingleIndex","findIndex","MARKETPLACE_LIKE_UNLIKE_JINGLE","viewBox","className","cx","cy","r","style","fill","stroke","id","points","margin","width","float","SampleBox2","props","sound","play","setState","start","loadSample","stop","loading","stopSound","bind","playSound","this","Pizzicato","source","on","name","jingleType","rarity","background","getColorForRarity","LoadingIcon","onClick","PlayIcon","StopIcon","color","Component","propTypes","PropTypes","connect","playAudio","SET_SINGLE_AUDIO","SingleJingle","playWithDelay","settings","loadJingle","canLike","likeUnLikeProfileJingle","delays","slice","d","parseInt","sampleSrcs","sampleTypes","sampleType","i","Promise","resolve","Sound","getJingleMetadata","volume","all","then","sources","reduce","prev","current","getRawSourceNode","buffer","duration","Group","author","onSale","price","likeCount","key","formatSalePrice","height","to","likeJingle","active","size","mapDispatchToProps","volumes","compose"],"sourceRoot":""}