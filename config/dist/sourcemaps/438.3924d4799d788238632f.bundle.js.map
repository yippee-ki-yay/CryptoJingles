{"version":3,"file":"438.3924d4799d788238632f.bundle.js","mappings":"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","sources":["webpack:///./node_modules/clamp/index.js","webpack:///./node_modules/color-luminance/index.js","webpack:///./node_modules/gl-vec2/add.js","webpack:///./node_modules/gl-vec2/ceil.js","webpack:///./node_modules/gl-vec2/clone.js","webpack:///./node_modules/gl-vec2/copy.js","webpack:///./node_modules/gl-vec2/create.js","webpack:///./node_modules/gl-vec2/cross.js","webpack:///./node_modules/gl-vec2/dist.js","webpack:///./node_modules/gl-vec2/distance.js","webpack:///./node_modules/gl-vec2/div.js","webpack:///./node_modules/gl-vec2/divide.js","webpack:///./node_modules/gl-vec2/dot.js","webpack:///./node_modules/gl-vec2/epsilon.js","webpack:///./node_modules/gl-vec2/equals.js","webpack:///./node_modules/gl-vec2/exactEquals.js","webpack:///./node_modules/gl-vec2/floor.js","webpack:///./node_modules/gl-vec2/forEach.js","webpack:///./node_modules/gl-vec2/fromValues.js","webpack:///./node_modules/gl-vec2/index.js","webpack:///./node_modules/gl-vec2/inverse.js","webpack:///./node_modules/gl-vec2/len.js","webpack:///./node_modules/gl-vec2/length.js","webpack:///./node_modules/gl-vec2/lerp.js","webpack:///./node_modules/gl-vec2/limit.js","webpack:///./node_modules/gl-vec2/max.js","webpack:///./node_modules/gl-vec2/min.js","webpack:///./node_modules/gl-vec2/mul.js","webpack:///./node_modules/gl-vec2/multiply.js","webpack:///./node_modules/gl-vec2/negate.js","webpack:///./node_modules/gl-vec2/normalize.js","webpack:///./node_modules/gl-vec2/random.js","webpack:///./node_modules/gl-vec2/rotate.js","webpack:///./node_modules/gl-vec2/round.js","webpack:///./node_modules/gl-vec2/scale.js","webpack:///./node_modules/gl-vec2/scaleAndAdd.js","webpack:///./node_modules/gl-vec2/set.js","webpack:///./node_modules/gl-vec2/sqrDist.js","webpack:///./node_modules/gl-vec2/sqrLen.js","webpack:///./node_modules/gl-vec2/squaredDistance.js","webpack:///./node_modules/gl-vec2/squaredLength.js","webpack:///./node_modules/gl-vec2/sub.js","webpack:///./node_modules/gl-vec2/subtract.js","webpack:///./node_modules/gl-vec2/transformMat2.js","webpack:///./node_modules/gl-vec2/transformMat2d.js","webpack:///./node_modules/gl-vec2/transformMat3.js","webpack:///./node_modules/gl-vec2/transformMat4.js","webpack:///./node_modules/lerp/index.js","webpack:///./node_modules/new-array/index.js","webpack:///./node_modules/raf-loop/index.js","webpack:///./node_modules/raf-loop/node_modules/events/events.js","webpack:///./node_modules/right-now/browser.js","webpack:///./node_modules/seed-random/index.js","webpack:///./node_modules/simplex-noise/dist/cjs/commonjs-wrapper.js","webpack:///./node_modules/simplex-noise/dist/cjs/simplex-noise.js","webpack:///./node_modules/smoothstep/index.js"],"sourcesContent":["module.exports = clamp\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value)\n}\n","module.exports = rec601;\nmodule.exports.rec601 = rec601;\nmodule.exports.rec709 = rec709;\n\n/**\n * For the given RGB components, calculates the luminance according \n * to Rec. 601 (PAL/NTSC) coefficients:\n *\n *   R * 0.299 + G * 0.587 + B * 0.114\n * \n * @param  {Number} r the red component\n * @param  {Number} g the green component\n * @param  {Number} b the blue component\n * @return {Number}   the calculated luminance\n */\nfunction rec601(r, g, b) {\n    if (Array.isArray(r)) {\n        var a = r;\n        r = a[0];\n        g = a[1];\n        b = a[2];\n    }\n    return r * 0.299 + g * 0.587 + b * 0.114;\n}\n\n/**\n * For the given RGB components, calculates the luminance according \n * to Rec. 709 (HDTV) coefficients:\n *\n *   R * 0.2126 + G * 0.7152 + B * 0.0722\n * \n * @param  {Number} r the red component\n * @param  {Number} g the green component\n * @param  {Number} b the blue component\n * @return {Number}   the calculated luminance\n */\nfunction rec709(r, g, b) {\n    if (Array.isArray(r)) {\n        var a = r;\n        r = a[0];\n        g = a[1];\n        b = a[2];\n    }\n    return r * 0.2126 + g * 0.7152 + b * 0.0722;\n}","module.exports = add\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    return out\n}","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  return out\n}\n","module.exports = clone\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(2)\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = copy\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = create\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n    var out = new Float32Array(2)\n    out[0] = 0\n    out[1] = 0\n    return out\n}","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","module.exports = require('./distance')\n","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./divide')\n","module.exports = divide\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    return out\n}","module.exports = dot\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1]\n}","module.exports = 0.000001\n","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1]\n}\n","module.exports = floor\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  return out\n}\n","module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}","module.exports = fromValues\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n    var out = new Float32Array(2)\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , inverse: require('./inverse')\n  , min: require('./min')\n  , max: require('./max')\n  , rotate: require('./rotate')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat2: require('./transformMat2')\n  , transformMat2d: require('./transformMat2d')\n  , transformMat3: require('./transformMat3')\n  , transformMat4: require('./transformMat4')\n  , forEach: require('./forEach')\n  , limit: require('./limit')\n}\n","module.exports = inverse\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  return out\n}\n","module.exports = require('./length')\n","module.exports = length\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    return out\n}","module.exports = limit;\n\n/**\n * Limit the magnitude of this vector to the value used for the `max`\n * parameter.\n *\n * @param  {vec2} the vector to limit\n * @param  {Number} max the maximum magnitude for the vector\n * @returns {vec2} out\n */\nfunction limit(out, a, max) {\n  var mSq = a[0] * a[0] + a[1] * a[1];\n\n  if (mSq > max * max) {\n    var n = Math.sqrt(mSq);\n    out[0] = a[0] / n * max;\n    out[1] = a[1] / n * max;\n  } else {\n    out[0] = a[0];\n    out[1] = a[1];\n  }\n\n  return out;\n}\n","module.exports = max\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    return out\n}","module.exports = min\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    return out\n}","module.exports = require('./multiply')\n","module.exports = multiply\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    return out\n}","module.exports = negate\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    return out\n}","module.exports = normalize\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1]\n    var len = x*x + y*y\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n    }\n    return out\n}","module.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n    var r = Math.random() * 2.0 * Math.PI\n    out[0] = Math.cos(r) * scale\n    out[1] = Math.sin(r) * scale\n    return out\n}","module.exports = rotate\n\n/**\n * Rotates a vec2 by an angle\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to rotate\n * @param {Number} angle the angle of rotation (in radians)\n * @returns {vec2} out\n */\nfunction rotate(out, a, angle) {\n  var c = Math.cos(angle),\n      s = Math.sin(angle)\n  var x = a[0],\n      y = a[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\n","module.exports = round\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    return out\n}","module.exports = scaleAndAdd\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    return out\n}","module.exports = set\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = require('./squaredDistance')\n","module.exports = require('./squaredLength')\n","module.exports = squaredDistance\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return x*x + y*y\n}","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1]\n    return x*x + y*y\n}","module.exports = require('./subtract')\n","module.exports = subtract\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    return out\n}","module.exports = transformMat2\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y\n    out[1] = m[1] * x + m[3] * y\n    return out\n}","module.exports = transformMat2d\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y + m[4]\n    out[1] = m[1] * x + m[3] * y + m[5]\n    return out\n}","module.exports = transformMat3\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[3] * y + m[6]\n    out[1] = m[1] * x + m[4] * y + m[7]\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","function lerp(v0, v1, t) {\n    return v0*(1-t)+v1*t\n}\nmodule.exports = lerp","module.exports = newArray\n\nfunction newArray (n, value) {\n  n = n || 0\n  var array = new Array(n)\n  for (var i = 0; i < n; i++) {\n    array[i] = value\n  }\n  return array\n}\n","var inherits = require('inherits')\nvar EventEmitter = require('events').EventEmitter\nvar now = require('right-now')\nvar raf = require('raf')\n\nmodule.exports = Engine\nfunction Engine(fn) {\n    if (!(this instanceof Engine)) \n        return new Engine(fn)\n    this.running = false\n    this.last = now()\n    this._frame = 0\n    this._tick = this.tick.bind(this)\n\n    if (fn)\n        this.on('tick', fn)\n}\n\ninherits(Engine, EventEmitter)\n\nEngine.prototype.start = function() {\n    if (this.running) \n        return\n    this.running = true\n    this.last = now()\n    this._frame = raf(this._tick)\n    return this\n}\n\nEngine.prototype.stop = function() {\n    this.running = false\n    if (this._frame !== 0)\n        raf.cancel(this._frame)\n    this._frame = 0\n    return this\n}\n\nEngine.prototype.tick = function() {\n    this._frame = raf(this._tick)\n    var time = now()\n    var dt = time - this.last\n    this.emit('tick', dt)\n    this.last = time\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","'use strict';\r\n\r\nvar width = 256;// each RC4 output is 0 <= x < 256\r\nvar chunks = 6;// at least six RC4 outputs for each double\r\nvar digits = 52;// there are 52 significant digits in a double\r\nvar pool = [];// pool: entropy pool starts empty\r\nvar GLOBAL = typeof global === 'undefined' ? window : global;\r\n\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\nvar startdenom = Math.pow(width, chunks),\r\n    significance = Math.pow(2, digits),\r\n    overflow = significance * 2,\r\n    mask = width - 1;\r\n\r\n\r\nvar oldRandom = Math.random;\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\nmodule.exports = function(seed, options) {\r\n  if (options && options.global === true) {\r\n    options.global = false;\r\n    Math.random = module.exports(seed, options);\r\n    options.global = true;\r\n    return Math.random;\r\n  }\r\n  var use_entropy = (options && options.entropy) || false;\r\n  var key = [];\r\n\r\n  // Flatten the seed string or build one from local entropy if needed.\r\n  var shortseed = mixkey(flatten(\r\n    use_entropy ? [seed, tostring(pool)] :\r\n    0 in arguments ? seed : autoseed(), 3), key);\r\n\r\n  // Use the seed to initialize an ARC4 generator.\r\n  var arc4 = new ARC4(key);\r\n\r\n  // Mix the randomness into accumulated entropy.\r\n  mixkey(tostring(arc4.S), pool);\r\n\r\n  // Override Math.random\r\n\r\n  // This function returns a random double in [0, 1) that contains\r\n  // randomness in every bit of the mantissa of the IEEE 754 value.\r\n\r\n  return function() {         // Closure to return a random double:\r\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n        x = 0;                          //   and no 'extra last byte'.\r\n    while (n < significance) {          // Fill up all significant digits by\r\n      n = (n + x) * width;              //   shifting numerator and\r\n      d *= width;                       //   denominator and generating a\r\n      x = arc4.g(1);                    //   new least-significant-byte.\r\n    }\r\n    while (n >= overflow) {             // To avoid rounding up, before adding\r\n      n /= 2;                           //   last byte, shift everything\r\n      d /= 2;                           //   right using integer Math until\r\n      x >>>= 1;                         //   we have exactly the desired bits.\r\n    }\r\n    return (n + x) / d;                 // Form the number within [0, 1).\r\n  };\r\n};\r\n\r\nmodule.exports.resetGlobal = function () {\r\n  Math.random = oldRandom;\r\n};\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n/** @constructor */\r\nfunction ARC4(key) {\r\n  var t, keylen = key.length,\r\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n  // The empty key [] is treated as [0].\r\n  if (!keylen) { key = [keylen++]; }\r\n\r\n  // Set up S using the standard key scheduling algorithm.\r\n  while (i < width) {\r\n    s[i] = i++;\r\n  }\r\n  for (i = 0; i < width; i++) {\r\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n    s[j] = t;\r\n  }\r\n\r\n  // The \"g\" method returns the next (count) outputs as one number.\r\n  (me.g = function(count) {\r\n    // Using instance members instead of closure state nearly doubles speed.\r\n    var t, r = 0,\r\n        i = me.i, j = me.j, s = me.S;\r\n    while (count--) {\r\n      t = s[i = mask & (i + 1)];\r\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n    }\r\n    me.i = i; me.j = j;\r\n    return r;\r\n    // For robust unpredictability discard an initial batch of values.\r\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\r\n  })(width);\r\n}\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\nfunction flatten(obj, depth) {\r\n  var result = [], typ = (typeof obj)[0], prop;\r\n  if (depth && typ == 'o') {\r\n    for (prop in obj) {\r\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n    }\r\n  }\r\n  return (result.length ? result : typ == 's' ? obj : obj + '\\0');\r\n}\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\nfunction mixkey(seed, key) {\r\n  var stringseed = seed + '', smear, j = 0;\r\n  while (j < stringseed.length) {\r\n    key[mask & j] =\r\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n  }\r\n  return tostring(key);\r\n}\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto if available.\r\n//\r\n/** @param {Uint8Array=} seed */\r\nfunction autoseed(seed) {\r\n  try {\r\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\r\n    return tostring(seed);\r\n  } catch (e) {\r\n    return [+new Date, GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins,\r\n            GLOBAL.screen, tostring(pool)];\r\n  }\r\n}\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\nfunction tostring(a) {\r\n  return String.fromCharCode.apply(0, a);\r\n}\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to intefere with determinstic PRNG state later,\r\n// seedrandom will not call Math.random on its own again after\r\n// initialization.\r\n//\r\nmixkey(Math.random(), pool);\r\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst simplex_noise_js_1 = __importDefault(require(\"./simplex-noise.js\"));\n// dumb hack so there is a consistent way to import using commonjs\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nsimplex_noise_js_1.default['SimplexNoise'] = simplex_noise_js_1.default;\nmodule.exports = simplex_noise_js_1.default;\n//# sourceMappingURL=commonjs-wrapper.js.map","\"use strict\";\n/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n Copyright (c) 2021 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildPermutationTable = exports.SimplexNoise = void 0;\nconst F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\nconst G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\nconst F3 = 1.0 / 3.0;\nconst G3 = 1.0 / 6.0;\nconst F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\nconst G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\nconst grad3 = new Float32Array([1, 1, 0,\n    -1, 1, 0,\n    1, -1, 0,\n    -1, -1, 0,\n    1, 0, 1,\n    -1, 0, 1,\n    1, 0, -1,\n    -1, 0, -1,\n    0, 1, 1,\n    0, -1, 1,\n    0, 1, -1,\n    0, -1, -1]);\nconst grad4 = new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n    0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n    1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n    -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n    1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n    -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n    1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n    -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]);\n/** Deterministic simplex noise generator suitable for 2D, 3D and 4D spaces. */\nclass SimplexNoise {\n    /**\n     * Creates a new `SimplexNoise` instance.\n     * This involves some setup. You can save a few cpu cycles by reusing the same instance.\n     * @param randomOrSeed A random number generator or a seed (string|number).\n     * Defaults to Math.random (random irreproducible initialization).\n     */\n    constructor(randomOrSeed = Math.random) {\n        const random = typeof randomOrSeed == 'function' ? randomOrSeed : alea(randomOrSeed);\n        this.p = buildPermutationTable(random);\n        this.perm = new Uint8Array(512);\n        this.permMod12 = new Uint8Array(512);\n        for (let i = 0; i < 512; i++) {\n            this.perm[i] = this.p[i & 255];\n            this.permMod12[i] = this.perm[i] % 12;\n        }\n    }\n    /**\n     * Samples the noise field in 2 dimensions\n     * @param x\n     * @param y\n     * @returns a number in the interval [-1, 1]\n     */\n    noise2D(x, y) {\n        const permMod12 = this.permMod12;\n        const perm = this.perm;\n        let n0 = 0; // Noise contributions from the three corners\n        let n1 = 0;\n        let n2 = 0;\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y) * F2; // Hairy factor for 2D\n        const i = Math.floor(x + s);\n        const j = Math.floor(y + s);\n        const t = (i + j) * G2;\n        const X0 = i - t; // Unskew the cell origin back to (x,y) space\n        const Y0 = j - t;\n        const x0 = x - X0; // The x,y distances from the cell origin\n        const y0 = y - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        else {\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        const x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        const y1 = y0 - j1 + G2;\n        const x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n        const y2 = y0 - 1.0 + 2.0 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            const gi0 = permMod12[ii + perm[jj]] * 3;\n            t0 *= t0;\n            n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            const gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n            t1 *= t1;\n            n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            const gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n            t2 *= t2;\n            n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70.0 * (n0 + n1 + n2);\n    }\n    /**\n     * Samples the noise field in 3 dimensions\n     * @param x\n     * @param y\n     * @param z\n     * @returns a number in the interval [-1, 1]\n     */\n    noise3D(x, y, z) {\n        const permMod12 = this.permMod12;\n        const perm = this.perm;\n        let n0, n1, n2, n3; // Noise contributions from the four corners\n        // Skew the input space to determine which simplex cell we're in\n        const s = (x + y + z) * F3; // Very nice and simple skew factor for 3D\n        const i = Math.floor(x + s);\n        const j = Math.floor(y + s);\n        const k = Math.floor(z + s);\n        const t = (i + j + k) * G3;\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const x0 = x - X0; // The x,y,z distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n        // Determine which simplex we are in.\n        let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n        let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n        if (x0 >= y0) {\n            if (y0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // X Y Z order\n            else if (x0 >= z0) {\n                i1 = 1;\n                j1 = 0;\n                k1 = 0;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // X Z Y order\n            else {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 1;\n                j2 = 0;\n                k2 = 1;\n            } // Z X Y order\n        }\n        else { // x0<y0\n            if (y0 < z0) {\n                i1 = 0;\n                j1 = 0;\n                k1 = 1;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Z Y X order\n            else if (x0 < z0) {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 0;\n                j2 = 1;\n                k2 = 1;\n            } // Y Z X order\n            else {\n                i1 = 0;\n                j1 = 1;\n                k1 = 0;\n                i2 = 1;\n                j2 = 1;\n                k2 = 0;\n            } // Y X Z order\n        }\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n        // c = 1/6.\n        const x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n        const y1 = y0 - j1 + G3;\n        const z1 = z0 - k1 + G3;\n        const x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n        const y2 = y0 - j2 + 2.0 * G3;\n        const z2 = z0 - k2 + 2.0 * G3;\n        const x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n        const y3 = y0 - 1.0 + 3.0 * G3;\n        const z3 = z0 - 1.0 + 3.0 * G3;\n        // Work out the hashed gradient indices of the four simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        // Calculate the contribution from the four corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n            t0 *= t0;\n            n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n            t1 *= t1;\n            n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n            t2 *= t2;\n            n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n            t3 *= t3;\n            n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to stay just inside [-1,1]\n        return 32.0 * (n0 + n1 + n2 + n3);\n    }\n    /**\n     * Samples the noise field in 4 dimensions\n     * @param x\n     * @param y\n     * @param z\n     * @returns a number in the interval [-1, 1]\n     */\n    noise4D(x, y, z, w) {\n        const perm = this.perm;\n        let n0, n1, n2, n3, n4; // Noise contributions from the five corners\n        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n        const s = (x + y + z + w) * F4; // Factor for 4D skewing\n        const i = Math.floor(x + s);\n        const j = Math.floor(y + s);\n        const k = Math.floor(z + s);\n        const l = Math.floor(w + s);\n        const t = (i + j + k + l) * G4; // Factor for 4D unskewing\n        const X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n        const Y0 = j - t;\n        const Z0 = k - t;\n        const W0 = l - t;\n        const x0 = x - X0; // The x,y,z,w distances from the cell origin\n        const y0 = y - Y0;\n        const z0 = z - Z0;\n        const w0 = w - W0;\n        // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n        // To find out which of the 24 possible simplices we're in, we need to\n        // determine the magnitude ordering of x0, y0, z0 and w0.\n        // Six pair-wise comparisons are performed between each possible pair\n        // of the four coordinates, and the results are used to rank the numbers.\n        let rankx = 0;\n        let ranky = 0;\n        let rankz = 0;\n        let rankw = 0;\n        if (x0 > y0)\n            rankx++;\n        else\n            ranky++;\n        if (x0 > z0)\n            rankx++;\n        else\n            rankz++;\n        if (x0 > w0)\n            rankx++;\n        else\n            rankw++;\n        if (y0 > z0)\n            ranky++;\n        else\n            rankz++;\n        if (y0 > w0)\n            ranky++;\n        else\n            rankw++;\n        if (z0 > w0)\n            rankz++;\n        else\n            rankw++;\n        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n        // impossible. Only the 24 indices which have non-zero entries make any sense.\n        // We use a thresholding to set the coordinates in turn from the largest magnitude.\n        // Rank 3 denotes the largest coordinate.\n        // Rank 2 denotes the second largest coordinate.\n        // Rank 1 denotes the second smallest coordinate.\n        // The integer offsets for the second simplex corner\n        const i1 = rankx >= 3 ? 1 : 0;\n        const j1 = ranky >= 3 ? 1 : 0;\n        const k1 = rankz >= 3 ? 1 : 0;\n        const l1 = rankw >= 3 ? 1 : 0;\n        // The integer offsets for the third simplex corner\n        const i2 = rankx >= 2 ? 1 : 0;\n        const j2 = ranky >= 2 ? 1 : 0;\n        const k2 = rankz >= 2 ? 1 : 0;\n        const l2 = rankw >= 2 ? 1 : 0;\n        // The integer offsets for the fourth simplex corner\n        const i3 = rankx >= 1 ? 1 : 0;\n        const j3 = ranky >= 1 ? 1 : 0;\n        const k3 = rankz >= 1 ? 1 : 0;\n        const l3 = rankw >= 1 ? 1 : 0;\n        // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n        const x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n        const y1 = y0 - j1 + G4;\n        const z1 = z0 - k1 + G4;\n        const w1 = w0 - l1 + G4;\n        const x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n        const y2 = y0 - j2 + 2.0 * G4;\n        const z2 = z0 - k2 + 2.0 * G4;\n        const w2 = w0 - l2 + 2.0 * G4;\n        const x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n        const y3 = y0 - j3 + 3.0 * G4;\n        const z3 = z0 - k3 + 3.0 * G4;\n        const w3 = w0 - l3 + 3.0 * G4;\n        const x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n        const y4 = y0 - 1.0 + 4.0 * G4;\n        const z4 = z0 - 1.0 + 4.0 * G4;\n        const w4 = w0 - 1.0 + 4.0 * G4;\n        // Work out the hashed gradient indices of the five simplex corners\n        const ii = i & 255;\n        const jj = j & 255;\n        const kk = k & 255;\n        const ll = l & 255;\n        // Calculate the contribution from the five corners\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n        if (t0 < 0)\n            n0 = 0.0;\n        else {\n            const gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n            t0 *= t0;\n            n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n        }\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n        if (t1 < 0)\n            n1 = 0.0;\n        else {\n            const gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n            t1 *= t1;\n            n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n        }\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n        if (t2 < 0)\n            n2 = 0.0;\n        else {\n            const gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n            t2 *= t2;\n            n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n        }\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n        if (t3 < 0)\n            n3 = 0.0;\n        else {\n            const gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n            t3 *= t3;\n            n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n        }\n        let t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n        if (t4 < 0)\n            n4 = 0.0;\n        else {\n            const gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n            t4 *= t4;\n            n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n        }\n        // Sum up and scale the result to cover the range [-1,1]\n        return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n}\nexports.SimplexNoise = SimplexNoise;\nexports.default = SimplexNoise;\n/**\n * Builds a random permutation table.\n * This is exported only for (internal) testing purposes.\n * Do not rely on this export.\n * @private\n */\nfunction buildPermutationTable(random) {\n    const p = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) {\n        p[i] = i;\n    }\n    for (let i = 0; i < 255; i++) {\n        const r = i + ~~(random() * (256 - i));\n        const aux = p[i];\n        p[i] = p[r];\n        p[r] = aux;\n    }\n    return p;\n}\nexports.buildPermutationTable = buildPermutationTable;\n/*\nThe ALEA PRNG and masher code used by simplex-noise.js\nis based on code by Johannes Baagøe, modified by Jonas Wagner.\nSee alea.md for the full license.\n*/\nfunction alea(seed) {\n    let s0 = 0;\n    let s1 = 0;\n    let s2 = 0;\n    let c = 1;\n    const mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n    s0 -= mash(seed);\n    if (s0 < 0) {\n        s0 += 1;\n    }\n    s1 -= mash(seed);\n    if (s1 < 0) {\n        s1 += 1;\n    }\n    s2 -= mash(seed);\n    if (s2 < 0) {\n        s2 += 1;\n    }\n    return function () {\n        const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n        s0 = s1;\n        s1 = s2;\n        return s2 = t - (c = t | 0);\n    };\n}\nfunction masher() {\n    let n = 0xefc8249d;\n    return function (data) {\n        data = data.toString();\n        for (let i = 0; i < data.length; i++) {\n            n += data.charCodeAt(i);\n            let h = 0.02519603282416938 * n;\n            n = h >>> 0;\n            h -= n;\n            h *= n;\n            n = h >>> 0;\n            h -= n;\n            n += h * 0x100000000; // 2^32\n        }\n        return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n}\n//# sourceMappingURL=simplex-noise.js.map","module.exports = function smoothstep (min, max, value) {\n  var x = Math.max(0, Math.min(1, (value-min)/(max-min)));\n  return x*x*(3 - 2*x);\n};\n"],"names":["module","exports","value","min","max","rec601","r","g","b","Array","isArray","a","rec709","out","Math","ceil","Float32Array","z","x","y","sqrt","a0","a1","b0","b1","abs","EPSILON","floor","stride","offset","count","fn","arg","i","l","length","vec","create","clone","fromValues","copy","set","equals","exactEquals","add","subtract","sub","multiply","mul","divide","div","inverse","rotate","round","scale","scaleAndAdd","distance","dist","squaredDistance","sqrDist","len","squaredLength","sqrLen","negate","normalize","dot","cross","lerp","random","transformMat2","transformMat2d","transformMat3","transformMat4","forEach","limit","t","ax","ay","mSq","n","PI","cos","sin","angle","c","s","m","v0","v1","array","inherits","EventEmitter","now","raf","Engine","this","running","last","_frame","_tick","tick","bind","on","prototype","start","stop","cancel","time","dt","emit","_events","_maxListeners","undefined","isFunction","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","type","er","handler","args","listeners","error","arguments","Error","err","context","call","slice","apply","addListener","listener","newListener","push","warned","console","trace","once","fired","removeListener","list","position","splice","removeAllListeners","key","listenerCount","evlistener","emitter","performance","Date","width","pool","GLOBAL","window","startdenom","pow","significance","overflow","mask","oldRandom","ARC4","keylen","me","j","S","flatten","obj","depth","prop","result","typ","e","mixkey","seed","smear","stringseed","charCodeAt","tostring","autoseed","crypto","getRandomValues","Uint8Array","navigator","plugins","screen","String","fromCharCode","options","global","use_entropy","entropy","arc4","d","resetGlobal","simplex_noise_js_1","__importDefault","mod","__esModule","default","Object","defineProperty","buildPermutationTable","SimplexNoise","F2","G2","G3","F4","G4","grad3","grad4","constructor","randomOrSeed","s0","s1","s2","mash","data","toString","h","masher","alea","p","perm","permMod12","noise2D","n0","n1","n2","x0","y0","i1","j1","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","noise3D","n3","k","z0","k1","i2","j2","k2","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","w","n4","w0","rankx","ranky","rankz","rankw","l1","l2","i3","j3","k3","l3","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","aux"],"sourceRoot":""}